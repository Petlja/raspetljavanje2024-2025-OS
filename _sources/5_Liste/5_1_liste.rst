Листе
======


Шта је листа?
------------------

**Листа** је један од најчешће коришћених типова података у Пајтону. Она представља колекцију елемената који су **уређени**, **променљиви** и могу да садрже дупликате. Листе се могу користити за чување било које врсте података, као што су бројеви, стрингови, па чак и друге листе.

.. infonote:: Кључне карактеристике листи:

   1. **Уређене**: Листе задржавају редослед елемената онако како су унете.
   2. **Променљиве**: Листе се могу мењати - елементи се могу додавати, брисати и мењати.
   3. **Дупликати**: Листе могу да садрже више истих вредности.

Замислите листу као *фиоку са преградама* или *полицу са кутијама*, где свака преграда или кутија садржи један предмет – на пример, 
број или неки други податак. Свакој прегради је додељен број (индекс), што нам омогућава да брзо пронађемо одређени предмет.

Када желимо да узмемо део садржаја, као да узимамо одређене кутије са полице – можемо да одредимо од ког до ког броја узимамо кутије. 
На пример, ако желимо кутије од треће до пете на полици, користимо индекс да издвојимо тај део листе, баш као што бисмо узели неколико кутија у низу.

Синтакса за креирање листе
---------------------------------

Листа се дефинише коришћењем угластих заграда `[]`, са елементима раздвојеним зарезима.

.. activecode:: liste1
   :coach:

   # Празна листа
   prazna_lista = []

   # Листа са елементима
   brojevi = [1, 2, 3, 4, 5]
   ime_filmova = ["Titanik", "Господар прстенова", "Матрикс"]
   mesovita_lista = [23, "Јован", True, 3.14]
   print(brojevi, ime_filmova, mesovita_lista)


.. infonote:: У горњим примерима:

   - **brojevi** је листа бројева.
   - **ime_filmova** је листа стрингова.
   - **mesovita_lista** је листа која садржи различите типове података.

Приступање елементима листе
-------------------------------

Можемо приступити елементима у листи коришћењем **индекса**. Индекси у Пајтону почињу од 0, што значи да је први елемент на позицији 0, други на позицији 1, итд.

.. activecode:: liste2
   :coach:

   filmovi = ["Titanik", "Господар прстенова", "Матрикс"]

   # Приступање првом елементу
   prvi_film = filmovi[0]
   print(prvi_film)  # Исписује: Titanik

   # Приступање последњем елементу
   poslednji_film = filmovi[-1]
   print(poslednji_film)  # Исписује: Матрикс


Мењање елемената у листи
--------------------------

Елементи у листи могу се мењати коришћењем индекса.

.. activecode:: liste3
   :coach:

   filmovi = ["Titanik", "Господар прстенова", "Матрикс"]

   # Мењање другог филма
   filmovi[1] = "Интерстелар"
   print(filmovi)  # Исписује: ['Titanik', 'Интерстелар', 'Матрикс']


Додавање елемената у листу:
----------------------------

Постоји више начина за додавање елемената у листу:

1. **append()** – Додаје елемент на крај листе.
2. **insert()** – Додаје елемент на одређену позицију у листи.

.. activecode:: liste4
   :coach:

   filmovi = ["Titanik", "Господар прстенова"]

   # Додавање елемента на крај листе
   filmovi.append("Матрикс")
   print(filmovi)  # Исписује: ['Titanik', 'Господар прстенова', 'Матрикс']

   # Уметање елемента на другу позицију
   filmovi.insert(1, "Интерстелар")
   print(filmovi)  # Исписује: ['Titanik', 'Интерстелар', 'Господар прстенова', 'Матрикс']


Брисање елемената из листе:
----------------------------

Можемо обрисати елементе на неколико начина:

1. **remove()** – Уклања први елемент који одговара датом параметру.
2. **pop()** – Уклања елемент са одређене позиције (или последњи елемент ако се не наведе позиција).
3. **del** – Брише елемент са одређене позиције.
4. **clear()** – Уклања све елементе из листе.

.. code-block:: python
   
   
   
   filmovi = ["Титаник", "Господар прстенова", "Матрикс"]


   # Уклањање елемента са одређене позиције
   filmovi.pop(1)
   print(filmovi)  # Исписује: ['Титаник', 'Матрикс']

   # Брисање елемента коришћењем del
   del filmovi[0]
   print(filmovi)  # Исписује: ['Матрикс']

   # Брисање свих елемената
   filmovi.clear()
   print(filmovi)  # Исписује: []


Дужина листе
---------------

Метод **len()** се користи за проналажење броја елемената у листи.

.. activecode:: liste6
   :coach:

   filmovi = ["Titanik", "Господар прстенова", "Матрикс"]
   print(len(filmovi))  # Исписује: 3


Сечење (slicing) листе
------------------------

Пајтон омогућава **сечење листи** како би се приступило подлисти, коришћењем опсега индекса.


Да размотримо детаљније *слајсовање листи*, што је начин приступања једном делу листе помоћу индекса. Слајсовање омогућава да добијемо подлисте из веће листе на једноставан и прегледан начин.

Основни облик  слајсовања је `lista[start:end]`, где:

- **start** означава индекс елемента на коме слајс почиње (укључен је у резултат).
- **end** означава индекс на коме се слајс завршава (није укључен у резултат).



**Пример 1: Издвајање елемената од другог до четвртог индекса**

.. activecode:: liste60
   :coach:

   brojevi = [1, 2, 3, 4, 5, 6, 7]
   podlista = brojevi[2:5]
   print(podlista)  # Исписује: [3, 4, 5]

Овде почињемо од елемента на индексу `2` и идемо до елемента пре индекса `5`, што су елементи `3, 4, 5`.




**Пример 2: Издвајање првих неколико елемената**
Када желимо прве елементе из листе, `start` може остати празан:

.. activecode:: liste61
   :coach:
   
   brojevi = [1, 2, 3, 4, 5, 6, 7]
   prvi_tri = brojevi[:3]
   print(prvi_tri)  # Исписује: [1, 2, 3]

Овде петља започиње од почетка листе и зауставља се на елементу пре индекса `3`.




**Пример 3: Издвајање последњих неколико елемената**
Када желимо да издвојимо последње елементе, можемо користити негативне индексе:

.. activecode:: liste62
   :coach:

   brojevi = [1, 2, 3, 4, 5, 6, 7]
   poslednja_tri = brojevi[-3:]
   print(poslednja_tri)  # Исписује: [5, 6, 7]

Негативни индекс `-3` означава трећи елемент од краја до краја листе.


.. activecode:: liste7
   :coach:

   brojevi = [1, 2, 3, 4, 5, 6, 7]

   # Приступање подлисти
   podlista = brojevi[2:5]  # Елементи од индекса 2 до 4
   print(podlista)  # Исписује: [3, 4, 5]

   # Приступање првим трима елементима
   prvi_tri = brojevi[:3]
   print(prvi_tri)  # Исписује: [1, 2, 3]

   # Приступање последњим трима елементима
   poslednja_tri = brojevi[-3:]
   print(poslednja_tri)  # Исписује: [5, 6, 7]

Закључак
Слајсовање је веома моћна техника јер омогућава приступ било којем делу листе, без потребе за сложенијим петљама или условима.


Петља кроз листу
--------------------

Можемо користити петље да прођемо кроз листу и обрадимо њене елементе.


.. activecode:: liste8
   :coach:

   filmovi = ["Titanik", "Господар прстенова", "Матрикс"]

   for film in filmovi:
       print(film)


Ово ће исписати:

.. code-block::

   Titanik
   Господар прстенова
   Матрикс


.. suggestionnote:: Корисни методи за рад са листама

   1. **append()** – Додаје елемент на крај листе.
   2. **insert()** – Убацује елемент на одређену позицију.
   3. **remove()** – Уклања први елемент са датом вредношћу.
   4. **pop()** – Уклања и враћа елемент са одређене позиције.
   5. **clear()** – Уклања све елементе из листе.
   6. **index()** – Враћа индекс прве појаве датог елемента.
   7. **count()** – Враћа број појава одређеног елемента у листи.
   8. **sort()** – Сортира елементе листе.
   9. **reverse()** – Обрће редослед елемената у листи.

**Пример 1:**

.. activecode:: liste93
   :coach:

   brojevi = [5, 3, 8, 2, 9]

   # Сортирање листе
   brojevi.sort()
   print(brojevi)  # Исписује: [2, 3, 5, 8, 9]

   # Обртање редоследа листе
   brojevi.reverse()
   print(brojevi)  # Исписује: [9, 8, 5, 3, 2]


**Пример 2: Практична употреба листа**

Замислите да имамо листу оцена и желимо да пронађемо просек.

.. activecode:: liste90
   :coach:

   ocene = [8, 9, 10, 7, 6, 9]

   # Израчунавање просека
   prosek = sum(ocene) / len(ocene)
   print("Просечна оцена је", prosek)


Ево једног примера који показује како листа може бити корисна – у овом случају за прављење списка задатака. Кôд можете покренути и 
сами експериментисати са њим.

Пример: Списак задатака
Замислите да имамо листу задатака које желимо да завршимо. Листа нам омогућава да додамо задатке, погледамо прве или последње задатке, 
као и да уклонимо оне који су завршени.

.. activecode:: liste91
   :coach:

   # Правимо почетни списак задатака
   zadaci = ["Uradi domaći", "Pročitaj knjigu", "Operi sudove"]

   # Исписујемо цео списак задатака
   print("Списак задатака:", zadaci)

   # Додајемо нови задатак на крај листе
   zadaci.append("Napravi prezentaciju")
   print("Додат нови задатак:", zadaci)

   # Приступамо првом задатку (први елемент листе)
   prvi_zadatak = zadaci[0]
   print("Први задатак:", prvi_zadatak)

   # Приступамо последњем задатку (користимо негативан индекс)
   poslednji_zadatak = zadaci[-1]
   print("Последњи задатак:", poslednji_zadatak)

   # Уклањамо завршени задатак (први у списку)
   zavrsen = zadaci.pop(0)
   print("Завршен задатак:", zavrsen)
   print("Ажурирани списак задатака:", zadaci)


.. infonote:: Шта кôд ради?

   1. **Исписује цео списак задатака.**
   2. **Додаје нови задатак** на крај листе користећи `append`.
   3. **Приступа првом и последњем задатку** помоћу индекса.
   4. **Уклања први задатак** који је завршен и исписује ажуриран списак.

.. questionnote:: Како пробати?

Можете експериментисати тако што додате или уклоните неке задатке из листе. Овакав списак је користан за разне свакодневне активности 
које је потребно организовати и управљати редоследом извршавања.


Ево примера функције која користи листу да изврши неку корисну операцију. У овом случају, направићемо функцију која прима листу бројева и 
враћа просечну вредност тих бројева.

**Пример 3: Израчунавање просека бројева у листи**

.. activecode:: liste94
   :coach:

   # Дефинишемо функцију која рачуна просек бројева у листи
   def izracunaj_prosek(brojevi):
       if len(brojevi) == 0:
           return 0  # Избегавамо дељење са нулом
       suma = sum(brojevi)  # Сабира све бројеве у листи
       prosek = suma / len(brojevi)  # Делимо са бројем елемената у листи
       return prosek

   # Испробајмо функцију са примером
   ocene = [5, 4, 3, 5, 4]
   prosek_ocena = izracunaj_prosek(ocene)
   print("Просечна оцена је:", prosek_ocena)


.. infonote:: Шта овај кôд ради?

   1. **Функција `izracunaj_prosek(brojevi)`** узима листу бројева као аргумент.
   2. Прво проверава да листа није празна како бисмо избегли дељење са нулом.
   3. Сабира све бројеве у листи помоћу `sum`.
   4. Израчунава просек тако што дели суму са бројем елемената у листи (`len(brojevi)`).
   5. Враћа просечну вредност.

.. questionnote:: Како користити ову функцију?

Можете је позвати са било којом листом бројева. На пример, ако желите да израчунате просечну оцену, као у примеру са листом `ocene = [5, 4, 3, 5, 4]`, 
функција ће вратити просек тих оцена.