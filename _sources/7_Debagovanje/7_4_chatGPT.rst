Како користити вештачку интелигенцију за учење програмирања
=============================================================

Коришћење алата вештачке интелигенције, као ChatGPT, није нужно лоша ствар при учењу. Две најбитније ствари које треба имати на уму при коришћењу оваквих алата су:

1. ChatGPT није човек: Ови алати немају "знанје" већ само генеришу текст који процењују да је највероватнији одговор на ваше питање.
   То значи да одговорност давања контекста и информација потребних за формирање одговора лежи на вама. 
   Трудите се да у вашим захтевима дате што више релевантних информација от проблему и о томе шта очекујете од оговора.

2. Циљ је научити а не решити проблем: Користите ChatGPT као алат за учење и истраживање нових концепата, а не као алат за решавање свих проблема. 
   Циљ је да стекнете разумевање и умеће у програмирању, а не само да добијете решење. Добар професор вам неће одмах дати решење проблема
   већ ће вас водити ка томе да самостално дођете до решења тако што вам објашнјава концепте и даје вам прилику да их ви сами повежете или тако што 
   вам објасни логику иза решенја али не каже вам и само решење. Затражите од ChatGPT да вас води кроз процес решавања проблема, а не да вам одмах да решење.
   Ако вам је на крају ипак потребно крајнје решење, затражите од ChatGPT да вам га објасни.

Разумевање концепта
-------------------

1. **Постављање питања**:  
   Када наиђете на нови концепт, као што су петље, функције или нешто друго, можете поставити директно питање, на пример:  
   *"Шта су петље у Пајтону и како се користе?"*

2. **Тражење примера**:  
   Понекад теорија није довољна. Замолите ChatGPT за пример:  
   *"Можеш ли дати пример while петље која сабира бројеве од 1 до 10?"*

3. **Разјашњавање нејасноћа**:  
   Ако не разумете зашто неки код ради или не ради, пошаљите питање са својим кодом:  
   *"Зашто следећи код не ради? [додај код овде]"*. Корисно је затражити да вам ChatGPT не да одмах исправни код већ само да вам објасни грешку.


Решавање проблема
------------------

1. **Дебаговање**:  
   Када наиђете на грешку, копирајте поруку о грешци и код, а затим питајте ChatGPT шта би могло бити погрешно:  
   *"Добијам грешку `IndexError: list index out of range` у следећем коду. Како да је решим?"*

2. **Разумевање грешака**:  
   Ако не разумете значење грешке, замолите за објашњење:  
   *"Шта значи ZeroDivisionError у Пајтону?"*

3. **Тражење бољих решења**:  
   Ако имате радни код, али желите да га оптимизујете, можете питати:  
   *"Како могу да оптимизујем овај код за брже извршавање?"*


Писање кода
-----------

1. **Генерисање примера**:  
   Када желите да вежбате, можете затражити задатке и примере:  
   *"Дај ми пример функције која израчунава факторијел броја у Пајтону."*

   Можете такође затражити да добијете само примере без решења.

2. **Писање сложенијег кода**:  
   Ако пишете дужи код, можете затражити да ChatGPT креира делове кода:  
   *"Напиши функцију која проверава да ли је број прост."*

3. **Проверавање кода**:  
   Ако сте написали код и желите да проверите да ли је исправан, можете га поделити и тражити повратне информације:  
   *"Да ли је овај код за проверу простих бројева исправан?"*

   Можете питати за тест примере који би могли да провере исправност вашег кода. на овај начин сами пролазите кроз процес дебаговања и учите како да проверавате исправност кода.


Најбоље праксе
--------------

1. **Постављајте јасна и конкретна питања**:  
   Уместо да питате *"Шта је Пајтон?"*, пробајте са *"Како се користе листе у Пајтону?"*

2. **Експериментишите са одговорима**:  
   Када добијете одговор, покушајте да га имплементирате у свом окружењу и видите како функционише.

3. **Разбијте сложене проблеме**:  
   Ако је ваш проблем комплексан, разбијте га на мање делове и постављајте појединачна питања.

4. **Учите из грешака**:  
   Ако не разумете одговор или га не можете применити, вратите се са додатним питањима.

5. **Чувајте корисне одговоре**:  
   Бележите одговоре који су вам помогли како бисте их касније могли користити као референце.

6. **Специфицирајте начин излагања информација**:
    Посебно наведите како желите да одговор на ваше питање буде конципира. На пример, ако желите да вам ChatGPT објасни логику иза решења, 
    наведите то у питању.


Границе и препоруке
-------------------

1. **Проверите код пре коришћења**:  
   Иако је ChatGPT моћан алат, код који генерише треба да проверите и тестирате пре употребе.

2. **Учење уместо ослањања**:  
   Користите ChatGPT као алат за учење, а не као замену за сопствено разумевање и рад.

3. **Постављајте изазове себи**:  
   Немојте само копирати решења; покушајте да их разумете и креирате сопствени код.

Закључак
--------

ChatGPT је моћан савезник у учењу програмирања. Његова способност да пружа објашњења, 
примере и помоћ у решавању проблема може значајно убрзати процес учења. 
Међутим, важно је да га користите као алат који ће вас водити ка самосталности и дубоком разумевању програмирања. Срећно у учењу!
