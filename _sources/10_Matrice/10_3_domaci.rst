Домаћи задаци
:::::::::::::

Задатак 1
`````````

Напиши програм који нормализује елементе матрице тако да сви елементи буду у опсегу [0, 1], користећи минималну и максималну вредност у матрици.

**Primer 1:**

**Ulaz**:

1 2 3 

4 5 6

7 8 9

**Izlaz**:

0.0 0.125 0.25

0.375 0.5 0.625

0.75 0.875 1.0

**Објашњење:**

Минимална вредност у матрици је 1, а максимална вредност је 9. Нормализација се врши по формули:

:math:`x_{norm} = \frac{x - x_{min}}{x_{max} - x_{min}}`

Задатак 2
`````````

Напиши програм који рачуна збир елемената изнад и испод главне дијагонале у квадратној матрици.

**Primer 1:**

**Ulaz**:

1 2 3

4 5 6

7 8 9

**Izlaz**:

Zbir elemenata iznad glavne dijagonale: 11

Zbir elemenata ispod glavne dijagonale: 19

**Објашњење:**

Збир елемената изнад главне дијагонале: 2 + 3 + 6 = 11

Збир елемената испод главне дијагонале: 4 + 7 + 8 = 19

**Primer 2:**

**Ulaz**:

1 2 3 4

5 6 7 8

9 10 11 12

13 14 15 16

**Izlaz**:

Zbir elemenata iznad glavne dijagonale: 36

Zbir elemenata ispod glavne dijagonale: 66

**Објашњење:**

Збир елемената изнад главне дијагонале: 2 + 3 + 4 + 7 + 8 + 12 = 36

Збир елемената испод главне дијагонале: 5 + 9 + 10 + 13 + 14 + 15 = 66

Задатак 3
`````````

Матрица представља црно-белу слику (1 - црна тачка, 0 - бела тачка). Наћи дужину најдуже хоризонталне, вертикалне и дијагоналне црне линије.

**Primer 1:**

**Ulaz**:

1 0 1 0 0

1 0 1 1 1

1 1 1 1 1

1 0 0 1 0

**Izlaz**:

Najduža horizontalna crna linija: 5
Najduža vertikalna crna linija: 4
Najduža dijagonalna crna linija: 3

**Primer 2:**

**Ulaz**:

1 0 1 0 0

1 0 1 1 1

1 1 1 1 1

1 0 1 1 1

1 1 1 1 1

**Izlaz**:

Najduža horizontalna crna linija: 5
Najduža vertikalna crna linija: 5
Najduža dijagonalna crna linija: 4

Задатак 4
`````````

Матрица m × n представља становништво у градским квартовима (1 - здрави, 2 - заражени, 0 - празно). Имплементирај:

1. Симулацију ширења заразе где сваки заражени становник зарази своје суседе (горе, доле, лево, десно).
2. Приказ матрице после једне итерације ширења.
3. Приказ матрице после k итерација ширења.

**Primer 1:**

**Ulaz**:

1 1 1 1 1

1 1 1 1 1

1 1 2 1 1

1 1 1 1 1

k = 1

**Izlaz**:

1 1 1 1 1

1 1 2 1 1

1 2 2 2 1

1 1 2 1 1

**Објашњење:**

Заражени становник у средини заразио је своје суседе. 

**Primer 2:**

**Ulaz**:

1 1 1 1 1

1 1 1 1 1

1 1 2 1 1

1 1 2 1 1

k = 2

**Izlaz**:

1 1 2 1 1

1 2 2 2 1

2 2 2 2 2

2 2 2 2 2

**Објашњење:**

Заражени становник у средини заразио је своје суседе, који су у дугој итерацији заразили своје суседе.

Задатак 5
`````````

Матрица садржи само 0 и 1. Пронађи највећи правоугаоник који се састоји искључиво од 1 и израчунај његову површину.

**Primer 1:**

**Ulaz**:

1 0 1 0 0

1 0 1 1 1

1 1 1 1 1

1 0 0 1 0

**Izlaz**:

6

**Објашњење:**

Највећи правоугаоник који се састоји искључиво од 1 је:

1 0 1 0 0

1 0 **1 1 1**

1 1 **1 1 1**

1 0 0 1 0

**Primer 2:**

**Ulaz**:

1 0 1 0 0

1 0 1 1 1

1 1 1 1 1

1 0 1 1 1

1 1 1 1 1

**Izlaz**:

12

**Објашњење:**

Највећи правоугаоник који се састоји искључиво од 1 је:

1 0 1 0 0

1 0 **1 1 1**

1 1 **1 1 1**

1 0 **1 1 1**

1 1 **1 1 1**

Задатак 6
`````````

Пао је снег у граду и потребно је знати колико центиметара снега је у ком делу града пало. 
На неким деловима града је измерено колико је пало снега, док на другим деловима није. 
Имамо делимично попуњену матрицу где сваки елемент представља локацију у граду и колико центиметара снега је пало на тој локацији. 
Локације на којима је измерена висина снега имају број између 1 и 10, док локације на којима није измерена имају вредност 0. 
Потребно је направити програм који за унете координате матрице процењује колико је снега пало на тој локацији. 
Висина снега у неком пољу се процењује као просечна вредност локација око ње које имају измерену висину снега (средња вредност 3x3 подматрице чији је центар у траженој тачки). 
Ако тражена тачка нити и једно поље око ње немају измерену висину снега, матрица претраге се проширује на димензије 5x5. 
Ако ни тад нема, проширује се на 7x7 итд. 

Координатни систем почиње у горњем левом ћошку матрице.

**Primer 1:**

**Ulaz**:

0 2 1 0 0 5 0 0 0

0 1 0 5 0 0 0 0 0

0 0 0 0 4 0 3 0 0

0 3 5 0 0 5 1 0 0

0 0 4 0 0 0 0 0 0

0 0 0 0 0 0 0 0 0

Koordinate: (2, 1)

**Izlaz**:

Estimirana visina snega: 2.25

**Objašnjenje:**

0 2 1 0 0 5 0 0 0

0 1 **0** 5 0 0 0 0 0

0 0 0 0 4 0 3 0 0

0 3 5 0 0 5 1 0 0

0 0 4 0 0 0 0 0 0

0 0 0 0 0 0 0 0 0

Estimirana visina: (2 + 1  + 1 + 5) / 4 = 2.25

**Primer 2:**

ista matrica kao u primeru 1

Koordinate: (5, 5)

**Izlaz**:

Estimirana visina snega: 3.0

**Објашњење:**

0 2 1 0 0 5 0 0 0

0 1 0 5 0 0 0 0 0

0 0 0 0 4 0 3 0 0

0 3 5 0 0 5 1 0 0

0 0 4 0 0 0 0 0 0

0 0 0 0 0 **0** 0 0 0

Околина 3x3 је празна па се околина проширује на 5x5. Просечна вредност измерених тачака у околини 5x5 је (5 + 1) / 2 = 3.0

Задатак 7
`````````

**УПОЗОРЕЊЕ:** Овај задатак је напредан задатак.

|

Матрица димензија `m` × `n` представља распоред паркинг места (1 - заузето, 0 - слободно). 
За дате координате одредити да ли је паркинг место слободно. 
Паркинг место је слободно ако није заузето и до њега може да се дође (има пут нула од те тачке до ивице матрице).

Координатни систем почиње у горњем левом ћошку матрице.

**Primer 1:**

**Ulaz**:

1 1 1 1 1

1 0 0 0 0

1 1 1 1 1

1 0 0 0 1

1 1 1 1 1

Koordinate: (1, 1)

**Izlaz**:

Parking mesto je slobodno

**Објашњење:**

1 1 1 1 1

1 **0** 0 0 0

1 1 1 1 1

1 0 0 0 1

1 1 1 1 1

Паркинг место је слободно јер се може доћи до ивице матрице.

**Primer 2:**

**Ulaz**:

1 1 1 1 1

1 0 0 0 0

1 1 1 1 1

1 0 0 0 1

1 1 1 1 1

Koordinate: (3, 3)

**Izlaz**:

Parking mesto nije slobodno

**Објашњење:**

1 1 1 1 1

1 0 0 0 0

1 1 1 1 1

1 0 0 **0** 1

1 1 1 1 1

Паркинг место није слободно јер се не може доћи до ивице матрице преко слободних позиција.





