Шта је функција
=================

Функција је блок кода у Пајтону који је дизајниран да извршава одређени задатак. Функције нам омогућавају да групишемо кôд који можемо више пута да користимо без поновног писања истих делова.
Функције су кључни део модуларног програмирања јер омогућавају лакше одржавање кода, његово организовање и поновну употребу.

Кључне карактеристике функција:

- **Поновна употреба**: Једном дефинисана функција може се користити више пута у различитим деловима програма.
- **Модуларност**: Разбијање проблема у мање делове (функције) чини програм лакшим за разумевање и одржавање.
- **Скраћење кода**: Уместо да пишемо исти кôд више пута, можемо га дефинисати унутар функције и позивати по потреби.


Дефинисање функције
--------------------

Функције се дефинишу помоћу кључне речи `def`, након које следи име функције и пар заграда `()` које могу садржати аргументе функције. На крају долази двотачка `:` која уводи тело функције.

Ево основног облика дефинисања функције у Пајтону:

.. code-block:: python
   

   def ime_funkcije():
       # тело функције
       print("Ово је функција!")


Пример 1: Једноставна функција без аргумената

.. activecode:: funkcije2
   :coach:
   
   def pozdrav():
       print("Здраво, добродошли у Пајтон!")


              # Када позовемо ову функцију, она ће исписати поруку:
   pozdrav()  # Резултат: Здраво, добродошли у Пајтон! 




Функције са аргументима
--------------------------

Функцији можемо проследити аргументе који ће утицати на њен рад. Аргументи су вредности које прослеђујемо функцији како би их користила унутар свог тела.

Пример 2: Функција са аргументима

.. activecode:: funkcije3
   :coach:

   def zbir(a, b):
       rezultat = a + b
       print("Збир", a, "и", b, "је", rezultat)

   zbir(5, 10)  # Резултат: Збир 5 и 10 је 15
	
	

Функције које враћају вредност
----------------------------------

Функција може да враћа резултат користећи кључну реч `return`. Ово нам омогућава да добијемо резултат из функције и користимо га у остатку програма.

Пример 3: Функција која враћа вредност

.. activecode:: funkcije4
   :coach:

   def mnozenje(a, b):
       return a * b

   rezultat = mnozenje(4, 5)
   print(rezultat)  # Резултат: 20
   
   
Функције са подразумеваним аргументима
--------------------------------------------

Функцијама можемо доделити подразумеване вредности за аргументе, што значи да ако се не проследи аргумент, користиће се задана вредност.

Пример 4: Функција са подразумеваним аргументима

.. activecode:: funkcije5
   :coach:

   def pozdrav(ime="Гост"):
       print("Здраво", ime,"!")

   # Можемо позвати функцију са или без аргумента:
   
   pozdrav()  # Резултат: Здраво, Гост!
   pozdrav("Ана")  # Резултат: Здраво, Ана!
   
   

Функције су неопходан део сваког Пајтон програма. Кроз њих можемо организовати кôд, поједноставити сложене задатке и лако поново користити већ написани кôд. Коришћење 
функција доприноси ефикасности, јасноћи и одрживости кода.